using System;
using System.Numerics;

namespace Secrets
{
    class Program
    {
        static void Main()
        {
            BigInteger number = BigInteger.Parse(Console.ReadLine());
            if (number < 0)
            {
                number *= -1;
            }
            BigInteger tempNumber = number;
            int numberposition = 1;
            int specialNumber = 0;

            while (tempNumber > 0)
            {
                int currentNumber = (int)(tempNumber % 10);
                if (numberposition % 2 == 0)
                {
                    specialNumber = specialNumber + ((currentNumber * currentNumber) * numberposition);
                }
                else
                {
                    specialNumber = specialNumber + (currentNumber * (numberposition * numberposition));
                }
                tempNumber /= 10;
                numberposition++;

            }
            
            Console.WriteLine(specialNumber);

            int sequence = specialNumber % 10;
            if (sequence == 0)
            {
                Console.WriteLine("{0} has no secret alpha-sequence",number);
            }
            else
            {
                char firstLetter = (char)('A' + specialNumber % 26);
                
                for (int i = 0; i < sequence; i++)
                {
                    char secretLetter = (char)(firstLetter + i);
                    
                    if (secretLetter > 'Z')
                    {
                        secretLetter = (char)(secretLetter - 'Z' + 'A' - 1);
                    }
                    Console.Write(secretLetter);
                                  
                }
            }
            Console.WriteLine();

        }
    }
}
